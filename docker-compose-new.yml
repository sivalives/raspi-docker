version: '3.9'  # Use 3.9 or higher for health checks and conditions
services:
  spunk-uf:
    image: sivalives/splunk-uf
    tty: true
    container_name: splunk-uf
    restart: always
    build:
      context: ./splunkforwarder
      args:
        SPKPASS: ${SPKPASS} # From .env file
      dockerfile: Dockerfile
    ports:
      - 8089:8089
      - 9997:9997
    networks:
      - mynetwork
    volumes:
      - opt-splunk-etc:/opt/splunkforwarder/etc
      - opt-splunk-var:/opt/splunkforwarder/var

  fish-feeder:
    build:
      context: ./fish-feeder
      dockerfile: Dockerfile
    container_name: fish-feeder
    image: sivalives/fish-feeder
    privileged: true
    restart: always
    volumes:
      - fish-feeder-data:/var/log
    networks:
      - mynetwork

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: always
    ports:
      - "5672:5672" # RabbitMQ default messaging port
      - "15672:15672" # RabbitMQ management UI port
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq # RabbitMQ data storage
      - rabbitmq-config:/etc/rabbitmq # RabbitMQ configuration
      - ./rabbit-mq/rabbitmq-config/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
      - ./rabbit-mq/rabbitmq-config/definitions.json:/etc/rabbitmq/definitions.json
    networks:
      - mynetwork
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 10s
      retries: 5

  rabbitmq-publisher:
    build:
      context: ./rabbit-mq/publisher
    container_name: rabbitmq-publisher
    restart: always
    ports:
      - "5000:5000"
    environment:
      - RABBITMQ_HOST=rabbitmq
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - mynetwork

networks:
  mynetwork:

volumes:
  opt-splunk-etc:
  opt-splunk-var:
  fish-feeder-data:
  rabbitmq-data:
  rabbitmq-log:
  rabbitmq-config:

